<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- ======================================================================= -->
							<!-- Condemnation Pods -->							
<!-- ======================================================================= -->

	<!-- Level 4: Microsaur Condemnation Pod -->

	<ItemType UNID="&itCCMicrosaurCondemnationPod;"
			name=				"Microsaur condemnation pod"
			attributes=			"cabbageCorp, notStandard"
			inherit=			"&baMiningPodItem;"
			  
			level=				"4"
			frequency=			"rare"
			numberAppearing=	"4d6"

			value=				"200"
			mass=				"500"

			description=		"This scanner pod explodes into a seismic wave that reveals the location of Microsaurs hidden within a 30 light-seconds range. May not work if the object contains other living beings."
			>

		<Image imageID="&rsItems2;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>
		
		<StaticData>
			<Data id="effectRadius">30</Data>
			<Data id="imageVariant">0</Data>
			<Data id="oreCriteria">"t +unid:0x00004033;"</Data>
		</StaticData>
		
		<Events>
			<OnEffect>
				(sysCreateWeaponFire 
					&vtCCMicrosaurScannerPower; 
					(list (@ gData 'sourceObj) 'explosion Nil "Microsaur condemnation pod" 0x00)
					(objGetPos (@ gData 'podObj))
					0
					0
					Nil
					(list 'detonateNow 'fireEffect 'soundEffect)
					)
			</OnEffect>
		</Events>
	</ItemType>
	
	<ItemType UNID="&vtCCMicrosaurScannerPower;"
			name=				"Microsaur scanner power"
			virtual=			"true"
			inherit=			"&baCCMicrosaurScannerPower;"
			level=				"4"
			>

		<Weapon
				type=				"area"

				damage=				"blast:4d6; WMD5"
				fireRate=			"30"
				expansionSpeed=		"80"
				missileSpeed=		"0"
				lifetime=			"20"
				powerUse=			"500"
				canHitSource=		"true"
				
				sound=				"&snArmorHit1;"
				>

			<Effect>
				<Shockwave
						style=			"glowRing"
						width=			"2"
						glowSize=		"12"
						primaryColor=	"#ffd4cb"
						secondaryColor=	"#f24b29"
						/>
			</Effect>
		</Weapon>
		
		<StaticData>
			<Data id="podType">&itCCMicrosaurCondemnationPod;</Data>
		</StaticData>
	</ItemType>
	
	<!-- Level 8: Advanced Microsaur Condemnation Pod -->

	<ItemType UNID="&itCCAdvMicrosaurCondemnationPod;"
			name=				"advanced Microsaur condemnation pod"
			attributes=			"cabbageCorp, notStandard, specialty"
			inherit=			"&baMiningPodItem;"
			  
			level=				"8"
			frequency=			"veryrare"
			numberAppearing=	"4d6"

			value=				"300"
			mass=				"500"

			description=		"This is an improved version of the Microsaur condemnation pod. It detects Microsaurs in a 60 light-second radius. May not work if the object contains other living beings."
			>

		<Image imageID="&rsItems6;" imageX="288" imageY="96" imageWidth="96" imageHeight="96"/>
		
		<StaticData>
			<Data id="effectRadius">60</Data>
			<Data id="imageVariant">0</Data>
			<Data id="oreCriteria">"t +unid:0x00004033;"</Data>
		</StaticData>
		
		<Events>
			<OnEffect>
				(sysCreateWeaponFire 
					&vtCCAdvMicrosaurScannerPower; 
					(list (@ gData 'sourceObj) 'explosion Nil "advanced Microsaur condemnation pod" 0x00)
					(objGetPos (@ gData 'podObj))
					0
					0
					Nil
					(list 'detonateNow 'fireEffect 'soundEffect)
					)
			</OnEffect>
		</Events>
	</ItemType>
	
	<ItemType UNID="&vtCCAdvMicrosaurScannerPower;"
			name=				"advanced Microsaur scanner power"
			virtual=			"true"
			inherit=			"&baCCMicrosaurScannerPower;"
			level=				"8"
			>

		<Weapon
				type=				"area"

				damage=				"blast:6d6; WMD7"
				fireRate=			"30"
				expansionSpeed=		"80"
				missileSpeed=		"0"
				lifetime=			"38"
				powerUse=			"500"
				canHitSource=		"true"
				
				sound=				"&snArmorHit1;"
				>

			<Effect>
				<Shockwave
						style=			"glowRing"
						width=			"2"
						glowSize=		"12"
						primaryColor=	"#f7ffcc"
						secondaryColor=	"#d1f229"
						/>
			</Effect>
		</Weapon>
		
		<StaticData>
			<Data id="podType">&itCCAdvMicrosaurCondemnationPod;</Data>
		</StaticData>
	</ItemType>

<!-- ======================================================================= -->
							<!-- Emitter Coils -->									
<!-- ======================================================================= -->

	<!-- 1st Generation Emitter Coil -->

	<ItemType UNID="&itCCGen1EmitterCoils;"
			name=				"box(es) of 1st generation emitter coils"
			attributes=			"cabbageCorp, consumable"
			unknownType=		"&vtUnknownAmmoBox;"
			
			level=				"2"
			frequency=			"rare"
			
			charges=			"16-24"
			value=				"8"
			valueBonusPerCharge="8"
			mass=				"80"
			massBonusPerCharge=	"80"

			description=		"This box contains up to two dozen replacement coils for 1st generation Cabbage Corp shield emitter arrays."
			
			useScreen=			"&dsCCUseReplacementCoil;"

			sortName=			"emitter coils, box(es) of 1st generation"
	>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Events>
			<CanRepairItem>
				(itmMatches aItemToRepair "* L:1-3; +emitterCoil")
			</CanRepairItem>
			
			<GetRepairItemIntro>
				"This box is designed to carry replacement coils for shield emitter arrays.\n\n"
			</GetRepairItemIntro>
		</Events>
	</ItemType>

	<!-- 2nd Generation Emitter Coils -->

	<ItemType UNID="&itCCGen2EmitterCoils;"
			name=				"box(es) of 2nd generation emitter coils"
			attributes=			"cabbageCorp, consumable"
			unknownType=		"&vtUnknownAmmoBox;"
			
			level=				"5"
			frequency=			"rare"
			
			charges=			"16-24"
			value=				"60"
			valueBonusPerCharge="60"
			mass=				"100"
			massBonusPerCharge=	"100"

			description=		"This box contains up to two dozen replacement coils for 2nd generation Cabbage Corp shield emitter arrays."
			
			useScreen=			"&dsCCUseReplacementCoil;"

			sortName=			"emitter coils, box(es) of 2nd generation"
	>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>
		
		<Events>
			<CanRepairItem>
				(itmMatches aItemToRepair "* L:4-6; +emitterCoil")
			</CanRepairItem>
			
			<GetRepairItemIntro>
				"This box is designed to cushion replacement coils for shield emitter arrays.\n\n"
			</GetRepairItemIntro>
		</Events>
	</ItemType>

	<!-- 3rd Generation Emitter Coils -->

	<ItemType UNID="&itCCGen3EmitterCoils;"
			name=				"box(es) of 3rd generation emitter coils"
			attributes=			"cabbageCorp, consumable"
			unknownType=		"&vtUnknownAmmoBox;"
			
			level=				"8"
			frequency=			"rare"
			
			charges=			"16-24"
			value=				"500"
			valueBonusPerCharge="500"
			mass=				"140"
			massBonusPerCharge=	"140"

			description=		"This box contains up to two dozen replacement coils for 3rd generation Cabbage Corp shield emitter arrays."
			
			useScreen=			"&dsCCUseReplacementCoil;"

			sortName=			"emitter coils, box(es) of 3rd generation"
	>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>
		
		<Events>
			<CanRepairItem>
				(itmMatches aItemToRepair "* L:7-9; +emitterCoil")
			</CanRepairItem>
			
			<GetRepairItemIntro>
				"This box is designed to protect replacement coils for shield emitter arrays.\n\n"
			</GetRepairItemIntro>
		</Events>
	</ItemType>

	<!-- 4th Generation Emitter Coils -->

	<ItemType UNID="&itCCGen4EmitterCoils;"
			name=				"box(es) of 4th generation emitter coils"
			attributes=			"alien, cabbageCorp, consumable"
			
			level=				"11"
			frequency=			"veryrare"
			
			charges=			"16-24"
			value=				"4000"
			valueBonusPerCharge="4000"
			mass=				"180"
			massBonusPerCharge=	"180"

			description=		"This box contains up to two dozen replacement coils for 4th generation Cabbage Corp shield emitter arrays."
			
			useScreen=			"&dsCCUseReplacementCoil;"

			sortName=			"emitter coils, box(es) of 4th generation"
	>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Events>
			<CanRepairItem>
				(itmMatches aItemToRepair "* L:10-12;  +emitterCoil")
			</CanRepairItem>
			
			<GetRepairItemIntro>
				"This box is designed to safeguard replacement coils for shield emitter arrays.\n\n"
			</GetRepairItemIntro>
		</Events>
	</ItemType>

<!-- ======================================================================= -->
								<!-- Roms -->									
<!-- ======================================================================= -->

	<!-- Cabbage Corp System Map ROM -->

	<ItemType UNID="&itCCSystemMapROM;"
			name=				"system map access ROM"
			attributes=			"cabbageCorp, info"
			
			level=				"3"
			frequency=			"veryrare"
			
			value=				"2000"
			mass=				"1"
			
			description=		"This program utilizes the Cabbage Corp cartography libraries to generate a map of your current system, for a small fee. Can be reused indefinitely."
			>
			
		<Image imageID="&rsCCItems;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>
		
		<Invoke>
			(block (mappingCost)
				(setq mappingCost (multiply 50 (sysGetLevel) (sysGetLevel)))
				(if (geq (objGetBalance gSource) mappingCost)
					(block (obj mappedAll mapEnemy)
						(setq mappedAll True)
						
						; Compute the probability of mapping an enemy station
						(switch
							(geq (sysGetLevel) 7)
								(setq mapEnemy 0)
								
							(geq (sysGetLevel) 3)
								(setq mapEnemy (subtract 360 (multiply 72 (subtract (sysGetLevel) 2))))
								
							(setq mapEnemy 360)
							)
							
						; Iterate over all stations in the system
						(enum (sysFindObject gSource "Ts") obj
							(switch
								(and (objIsEnemy gSource obj) (gr (add (objGetDestiny obj) 1) mapEnemy))
									(setq mappedAll Nil)
									
								(objHasAttribute obj "uncharted")
									(setq mappedAll Nil)
									
								(objSetKnown obj)
								)
							)
							
						(if mappedAll
							(objSendMessage gSource Nil "Mapped all stations in system")
							(objSendMessage gSource Nil "Mapped charted stations in system")
							)
							
						; Identify the item
						(itmSetKnown gItem)
						
						(objCharge gSource mappingCost)
						(objSendMessage gPlayerShip Nil
							(cat
								"You have been charged "
								mappingCost
								" credits for purchasing this system map."
								)
							)
						)
					(block Nil
						(itmSetKnown gItem)
						(objSendMessage gPlayerShip Nil
							(cat
								"ERROR: "
								(subtract mappingCost (objGetBalance gSource))
								" more credits required to purchase system map."
								)
							)
						)
					)
				)
		</Invoke>
	</ItemType>

<!-- GLOBALS -->

	<Globals>
		(block Nil
			(setq CCUseReplacementCoil
				(lambda (theItem theDevice)
					(block (needsRepair resultText)
						(setq needsRepair (itmGetProperty aItemToRepair 'damaged))
						
						(if needsRepair
							(block (damagedCoils replacementCoils failureChance skillLevel)
								
								; Check if unknown item is compatible
								(if (not (objFireItemEvent gPlayership theItem "CanRepairItem"))
									(setq resultText "The superconducting coils were not compatible with your device, but you were able to successfully identify them.")
									
									(block Nil
										(setq skillLevel (typGetGlobalData &dsCCUseReplacementCoil; "skillLevel"))
										(setq damagedCoils
											(subtract
												(random 1 20)
												(divide (subtract skillLevel 10) 2)
												)
											)
										(setq replacementCoils (itmGetProperty theItem 'charges))

										; As skill level increases, the player's failure chance decreases
										(setq failureChance (divide (multiply damagedCoils 20) replacementCoils))

										; Do the repairs
										(if	(leq (random 1 100) failureChance)
											(if (eq (random 1 2) 1)
											
												; Sometimes we fail and destroy the device
												(block Nil
													(if (itmIsInstalled theDevice)
														(shpRemoveDevice gPlayerShip theDevice)
														)
													(objRemoveItem gPlayerShip (itmSetProperty theDevice 'installed Nil) 1)
													(setq resultText "Unfortunately, your attempt to repair the device has effectively destroyed it.")
													)
													
												; Sometimes we fail and destroy the replacement coils
												(block Nil
													(objRemoveItem gPlayerShip theItem 1)
													(setq resultText "Unfortunately, your attempt to repair the device was unsuccessful and the replacement coils were ruined in the process.")
													(setq replacementCoils 0)
													)
												)
											(block Nil
												(shpRepairItem gPlayerShip theDevice)
												(setq resultText "You have successfully repaired the damaged device")
												
												; Use up the item
												(if (and
														(geq skillLevel (random 1 12))
														(gr replacementCoils damagedCoils)
														)
													
													; Item is not entirely used up
													(block Nil
														(if (gr damagedCoils 0)
															(block Nil
																(objSetItemProperty gPlayership theItem 'charges (subtract replacementCoils damagedCoils))
																(setq resultText
																	(cat
																		resultText
																		" using "
																		damagedCoils
																		" of the replacement coils."
																		"\n\n"
																		"Replacement coils Left: "
																		(subtract replacementCoils damagedCoils)
																		)
																	)
																)
															(setq resultText
																(cat
																	resultText
																	", by power cycling it."
																	"\n\n"
																	"Replacement coils Left: "
																	(itmGetProperty theItem 'charges)
																	)
																)
															)
														)
													
													; Item is entirely used up
													(block Nil
														(objSetItemProperty gPlayership theItem 'charges 0)
														(setq resultText
															(cat
																resultText
																" using all of the replacement coils."
																)
															)
														)
													)
													
												; Skill level increases
												(typIncGlobalData &dsCCUseReplacementCoil; "skillLevel" 1)
												(setq resultText
													(cat
														resultText
														"\n\n"
														"You feel more experienced at repairing emitter coils."
														)
													)
												)
											)
										)
									)
								)
							(setq resultText "That device is not damaged. There is no need to attempt repairs.")
							)

						resultText
						)
					)
				)
			)
	</Globals>

</TranscendenceModule>
